#include<iostream>

using namespace std;


struct Node {
    int data;
    Node* next;

    Node(int value) : data(value), next(nullptr) {}
};


class Stack {
private:
    Node* top; 

public:
    
    Stack() : top(nullptr) {}

    
    ~Stack() {
        while (!isEmpty()) {
            pop();
        }
    }

    
    bool isEmpty() {
        return top == nullptr;
    }

    
    void push(int value) {
        Node* newNode = new Node(value);
        newNode->next = top;
        top = newNode;
        cout << value << " pushed onto the stack\n";
    }

    
    void pop() {
        if (isEmpty()) {
            cout << "Stack underflow, cannot pop from an empty stack\n";
            return;
        }
        Node* temp = top;
        top = top->next;
        cout << temp->data << " popped from the stack\n";
        delete temp;
    }

    
    int peek() {
        if (isEmpty()) {
            cout << "Stack is empty, cannot peek\n";
            return -1; // Assuming -1 as an error value, modify as needed
        }
        return top->data;
    }

    
    void display() {
        if (isEmpty()) {
            cout << "Stack is empty\n";
            return;
        }
        Node* current = top;
        cout << "Stack elements: ";
        while (current != nullptr) {
            cout << current->data << " ";
            current = current->next;
        }
        cout << endl;
    }
};

int main() {
    Stack myStack;
    int choice;

    do {
        cout << "\n---- MENU ----\n";
        cout << "1. Push\n";
        cout << "2. Pop\n";
        cout << "3. Display\n";
        cout << "4. Peek\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                int element;
                cout << "Enter the element to push onto the stack: ";
                cin >> element;
                myStack.push(element);
                break;
            }
            case 2:
                myStack.pop();
                break;
            case 3:
                myStack.display();
                break;
            case 4:
                cout << "Top element: " << myStack.peek() << endl;
                break;
            case 5:
                cout << "Exiting the program.\n";
                break;
            default:
                cout << "Invalid choice. Please enter a valid option.\n";
        }

    } while (choice != 5);

    return 0;
}
