#include<iostream>

using namespace std;


struct Node {
    int data;
    Node* next;

    Node(int value) : data(value), next(nullptr) {}
};

// Queue class
class Queue {
private:
    Node* front; 
    Node* rear; 

public:
    
    Queue() : front(nullptr), rear(nullptr) {}

    
    ~Queue() {
        while (!isEmpty()) {
            dequeue();
        }
    }

    
    bool isEmpty() {
        return front == nullptr;
    }

    
    void enqueue(int value) {
        Node* newNode = new Node(value);
        if (isEmpty()) {
            front = rear = newNode;
        } else {
            rear->next = newNode;
            rear = newNode;
        }
        cout << value << " enqueued into the queue\n";
    }

    
    void dequeue() {
        if (isEmpty()) {
            cout << "Queue underflow, cannot dequeue from an empty queue\n";
            return;
        }
        Node* temp = front;
        front = front->next;
        cout << temp->data << " dequeued from the queue\n";
        delete temp;
        
        if (front == nullptr) {
            rear = nullptr;
        }
    }

    
    int peek() {
        if (isEmpty()) {
            cout << "Queue is empty, cannot peek\n";
            return -1; // Assuming -1 as an error value, modify as needed
        }
        return front->data;
    }

    
    void display() {
        if (isEmpty()) {
            cout << "Queue is empty\n";
            return;
        }
        Node* current = front;
        cout << "Queue elements: ";
        while (current != nullptr) {
            cout << current->data << " ";
            current = current->next;
        }
        cout << endl;
    }
};

int main() {
    Queue myQueue;

    int choice;
    do {
        cout << "---- MENU ----\n";
        cout << "1. Enqueue\n2. Dequeue\n3. Peek\n4. Display\n5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: {
                int element;
                cout << "Enter the element to enqueue: ";
                cin >> element;
                myQueue.enqueue(element);
                break;
            }
            case 2:
                myQueue.dequeue();
                break;
            case 3:
                cout << "Front element: " << myQueue.peek() << endl;
                break;
            case 4:
                myQueue.display();
                break;
            case 5:
                cout << "Exiting the program\n";
                break;
            default:
                cout << "Invalid choice. Please enter a valid option.\n";
        }
    } while (choice != 5);

    return 0;
}
