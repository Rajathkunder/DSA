//2. Diagonal matri
//regno : 230970091
//date : 09-01-2024
#include<iostream>
using namespace std;
int main()
{
        int m,n,a[10][10],i,j,size,rowele,i1,i2,count=0,b[10];
        cout<<"Enter the dimension for sqaure matrix (Single dimension) :";
        cin>>m;

        if(m<=0){
                exit(0);
        }

        cout<<"enter the elements for diagonal:";
        for(i=0;i<m;i++)
        {
                for(j=0;j<m;j++)
                {
                        if(i==j)
                                cin>>a[i][j];
                        else
                                a[i][j]=0;

                }
        }
        cout<<"the elements are:\n";
        for(i=0;i<m;i++)
 {
                for(j=0;j<m;j++)
                {
                        cout<<a[i][j]<<"\t";

                }cout<<"\n";
        }
        size=m;
        cout<<"the row major 1d array is:\n"<<endl;
        for(i=0;i<m;i++)
        {


                for(j=0;j<m;j++)
                {

                        if(i==j)
                        {

                                b[count++]=a[i][j];
                        }
                }
        }

        for(i=0;i<size;i++)
                cout<<b[i]<<"\t";
        cout<<"enter the offset \n :";
        cin>>i1>>i2;
 if(i1<=m||i2<=m){
        rowele=(i1*m)+i2;
        cout<<"position is:"<<rowele<<endl;
        cout<<"the element is:";
        cout<<b[rowele]<<"\n";

        cout<<"In Diagonal matrix both row and column major produce same output , so checking row major is enougj\n";

        }else{
                cout<<"Offset value should be less than matrix original dimension \n";
        }




        return 0;
}
//----------------------------

//Name :  Rajath
//Date : 16-01-2024
//regNo: 230970091
//Program : Lower Triangular matrix

#include<iostream>
using namespace std;

int main()
{
        int len = 0,len2;
        cout << "Enter the length of the matrix: " << endl;
        cin >> len;
        len2=len*(len+1)/2;
        int matrix[len][len],matrix2[len2];

        cout << "enter the elements of the matrix: " << endl;
        for(int i = 0; i < len; i++)
        {
                for(int j = 0; j < len; j++)
                {
                        if(i >= j)
                        {
                                cin >> matrix[i][j];
                        }
                        else
                        {
                                matrix[i][j] = 0;
                        }
                                                      }
        }
        cout << "elements of the matrix in 2D array: " << endl;

        for(int i = 0; i < len; i++)
        {
                for(int j = 0; j < len; j++)
                {
                        /*if(matrix[i][j] == 0)
                         *                         {
                         *                                                         continue;
                         *                                                                                 }*/
                        cout << matrix[i][j] << "\t";
                }
                cout<<"\n";
        }

        for(int i = 0; i < len; i++)
        {
                for(int j = 0; j < len; j++)
                {
                        if(i >= j)
                        {
                                matrix2[((i*(i+1))/2)+j]= matrix[i][j];
                        }

                }
        }
        cout << endl;
cout<<"elements of matrix are \n";
        for(int i = 0; i < len2; i++)
        {
                cout<<matrix2[i]<<" \t";
        }
        cout<<"Enter positions to extract value(row,column)\n";
        int r,c;
        cin>>r>>c;
        if(r>=c)
        {
                cout <<"M["<<r+1<<"]["<<c+1<<"]: " <<matrix2[((r*(r+1))/2)+c]<<" "<<((r*(r+1))/2)+c;
        }
}
            
//-----------------------

//Program : Obtain the Row-major and Column-major representation of the given input matrix.
//Name : Rajath
//Regno : 230970091
//Date : 09-01-2024
#include<iostream>
using namespace std;


int main(){

int m,n,a[50][50];
cout<<"Enter row and column value \n";
cin>>m>>n;
if(m<0||n<0){
cout<<"Enter correct row and col value \n";

}
cout<<"Enter elements for the 2D matrix \n";
for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
                cin>>a[i][j];
         }

}

cout<<"2D matrix is \n";

for(int i=0;i<m;i++){
         for(int j=0;j<n;j++){
                cout<<a[i][j]<<"\t";
        }
         cout<<"\n";

}

cout<<"Row major of above matrix is \n";
int size=m*n;
int arr[size];
int count=0;
for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
                arr[count]=a[i][j];
                count=count+1;
        }

}

for(int i=0;i<size;i++){
cout<<arr[i]<<"\t";
}

int colmajArray[size];
count=0;
cout<<"Column major of above matrix is \n";
for(int j=0;j<n;j++){
        for(int i=0;i<m;i++){
                colmajArray[count]=a[i][j];
                count=count+1;


        }

}
for(int i=0;i<size;i++){
cout<<colmajArray[i]<<"\t";
}
int p,q;
cout<<"Inorder to find offset , Please enter row and column value to find position in 1D as well as 2D matrix \n";
cin>>p>>q;
if(q<0||p<0){
cout<<"Enter valid values \n";

}
else if(p<m||q<n)
{
int offset;
offset=(p*m)+q;
cout<<"Offset value of row major is :"<<offset<<"\n";
if(a[p][q]==(arr[offset])){
cout<<"Element present in 2D array position for row major\n";
}else{
cout<<"Element not found \n";
}


offset=(q*n)+p;
cout<<"Offset value of column Mnajor is :"<<offset<<"\n";
if(a[p][q]==(colmajArray[offset])){
cout<<"Element prsent in 2D array position for column major\n";
}else{
cout<<"Element not found \n";
}
}
else{
cout<<"Enter valid row and col value \n";
}

}

//----------------------------------

//Program : Tridoagonal matrix
//Date : 09-01-2024
//Name :  Rajath


#include<iostream>
using namespace std;
int main()
{
        int m,n,a[10][10],i,j,size,rowele,i1,i2,count=0,b[10];
        cout<<"enter the dimension :";
        cin>>m;
        n=m;
        cout<<"enter the elements:";
        for(i=0;i<m;i++)
        {
                for(j=0;j<n;j++)
                {
                        if(i==j||i==j-1||i==j+1)
                                cin>>a[i][j];
                        else
                                a[i][j]=0;

                }
        }
        cout<<"the elements are:\n";
        for(i=0;i<m;i++)
        {
                for(j=0;j<n;j++)
  {
                        cout<<a[i][j]<<"\t";

                }cout<<endl;
        }
        size=3*m-2;
        cout<<"the row major 1d array is:"<<endl;
        for(i=0;i<m;i++)

                for(j=0;j<n;j++)
                        if(i==j||i==j-1||i==j+1)




                                b[count++]=a[i][j];
        for(i=0;i<size;i++)
                cout<<b[i];
        cout<<"enter the offset:";
        cin>>i1>>i2;
        rowele=(2*i1+i2);
        cout<<"the position is:"<<rowele;
        cout<<"element is:"<<b[rowele];




        return 0;
}
                          
//----------------------------

//Name :  Rajath
//Date : 16-01-2024
//regNo: 230970091
//Program : Upper Triangular matrix

#include<iostream>
using namespace std;

int main()
{
        int len = 0,len2;
        cout << "Enter the length of the matrix: " << endl;
        cin >> len;
        len2=len*(len+1)/2;
        int matrix[len][len],matrix2[len2];

        cout << "enter the elements of the matrix: " << endl;
        for(int i = 0; i < len; i++)
        {
                for(int j = 0; j < len; j++)
                {
                        if(i <= j)
                        {
                                cin >> matrix[i][j];
                        }
                        else
                        {
                                matrix[i][j] = 0;
                        }
                                                        
                }
        }
        cout << "elements of the matrix in 2D array: " << endl;

        for(int i = 0; i < len; i++)
        {
                for(int j = 0; j < len; j++)
                {
                        /*if(matrix[i][j] == 0)
                         *                         {
                         *                                                         continue;
                         *                                                                                 }*/
                        cout << matrix[i][j] << "\t";
                }
                cout<<"\n";
        }

        for(int i = 0; i < len; i++)
        {
                for(int j = 0; j < len; j++)
                {
                        if(i <= j)
                        {
                                matrix2[((len*i)+j-(i*((i+1)/2)))]= matrix[i][j];
                        }

                }
        }
        cout << endl;
                                       
 cout<<"elements are \n";
        for(int i = 0; i < len2; i++)
        {
                cout<<matrix2[i]<<" \n";
        }
        cout<<"Enter positions to extract value(row,column)\n";
        int r,c;
        cin>>r>>c;
        if(r<=c)
        {
                cout <<"M["<<r+1<<"]["<<c+1<<"]: " <<matrix2[((len*r)+c-(r*((r+1)/2)))]<<" "<<(len*r)+c-(r*((r+1)/2));
        }
}

//-----------------------------

//Program : Represent a sparse matrix using 1-D array. Use this 1-D array to reconstruct the original
//matrix.
//Name : Rajath
//Regno : 230970091
//Date : 16-01-2024
#include<iostream>
using namespace std;
struct triplets{

int row,column,value;



};


int main(){

int m,n,a[50][50],newArray[50];
cout<<"Enter row and column value for sparse matrix\n";
cin>>m>>n;
if(m<0||n<0){
cout<<"Enter correct row and col value \n";

}
cout<<"Enter elements for the sparse matrix \n";
int count=0;
for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
       cin>>a[i][j];
                if(a[i][j]!=0){
                        count=count+1;
                }
         }

}

cout<<"sparse matrix is \n";

for(int i=0;i<m;i++){
         for(int j=0;j<n;j++){
                cout<<a[i][j]<<"\t";
        }
         cout<<"\n";

}
struct triplets zeroth[count];
zeroth[0].row=m;
zeroth[0].column=n;
zeroth[0].value=count;
//newArray[0]=zeroth;
int test=1;
cout<<"reading the elements form sparse matrix nd pushing them into 1D , array of stryctures.....\n";
for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
                if(a[i][j]!=0){
                        zeroth[test].row=i;
	 zeroth[test].column=j;
                        zeroth[test].value=a[i][j];
                        test=test+1;

                }
        }

}
cout<<"ROW \t COLUMN \t VALUES \n";
for(int i=0;i<=count;i++){//here i added condtion as  1 , for testing
        cout<<zeroth[i].row<<"\t"<<zeroth[i].column<<"\t"<<zeroth[i].value<<"\n";

}
}


                            